<style>
 .reset-password-div {
    justify-content: center;
    align-items: center;
    display: flex;
    padding: 50px 0px 50px 0;
    width: 100%;
  }
  
  .reset-password-container{
    width: 35%;
    min-width: 300px;
    max-width:375px;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 1px 1px 8px 2px grey;
  }
  
  .reset-password-title{
    text-align: center;
    font-size: 18px;
    padding-bottom: 30px;
    padding-top: 10px;
    font-family: 'Scandia';
    line-height: 22px;
  }
  
  .reset-password-button{
    background-color: black;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 90%;
    font-family: "Scandia";
    font-size: 18px;
    padding-bottom: 0px;
    color: white;
    border: 2px solid black;
    border-radius: 50px;
    padding: 10px;
    font-weight: 500;
    margin-top: 10px;
    cursor: pointer;
    transition: all 0.1s ease-out;
    text-transform: uppercase;
    margin:auto;
    margin-top:10px;
    margin-bottom:10px
  }
  
  .reset-password-button:active{
    transform:scale(0.95);
  }

  .reset-password-button:hover {
    background-color:white;
    border:2px solid black;
    color:black;
    opacity: 0.8;
  }
  
  .reset-password-validation{
  	color:red;
    font-size:12px;
    font-weight:600;
    padding-bottom:5px;
  }
 
  .reset-password-pw-requirement > span {
    color: red;
    margin-right: 3px;
  }

  .reset-password-pw-requirement:not(:last-child) {
    margin: 0 0 5px 0 !important;
  }

  .reset-password-pw-requirement{
    font-family: "TT Commons", Helvetica, sans-serif;
    font-size: 12px;
    font-weight: 500;
    text-align: left;
    letter-spacing: 0.03em;
    color: red;
  }
  
  .reset-password-input {
    width: 100%;
    margin: 0 0 20px 0;
    border: 2px solid #CBCBCB;
    border-radius:0px;
    padding: 12px;
    font-family: "Scandia", Helvetica, sans-serif;
  }

  .reset-password-input::placeholder {
    font-family: "Scandia", Helvetica, sans-serif;
    font-size: 12px;
    color: gray;
  }
</style>

<section class="section-generic">
  <div class="shell">
    <div class="reset-password-div">
      <div class="reset-password-container"> 
        <div class="reset-password-title"></div>
        <div hidden class="reset-password-validation" id="pw-empty">Please enter a password</div>
        <div hidden class="reset-password-validation" id="pw-weak">Password is too weak</div>
        <ul hidden class="reset-password-pw-requirements">
          <li class="reset-password-pw-requirement" id="req1">
            <span><i id="icon-req1" class="fa fa-times-circle"></i></span>
            At least one upper case letter
          </li>
          <li class="reset-password-pw-requirement" id="req2">
            <span><i id="icon-req2" class="fa fa-times-circle"></i></span>
            At least one lower case letter
          </li>
          <li class="reset-password-pw-requirement" id="req3">
            <span><i id="icon-req3" class="fa fa-times-circle"></i></span>
            At least one number
          </li>
          <li class="reset-password-pw-requirement" id="req4">
            <span><i id="icon-req4" class="fa fa-times-circle"></i></span>
            At least 8 characters
          </li>
        </ul>
        <input id="pw" class="reset-password-input" type="password" placeholder="Password" name="pw">
        <div hidden class="reset-password-validation" id="repeat-empty">Please repeat your password</div>
        <div hidden class="reset-password-validation" id="pws-no-match">Passwords do not match</div>
        <input id="repeat-pw" class="reset-password-input" type="password" placeholder="Repeat Password" name="repeat-pw">

        <div hidden class="reset-password-validation" id="no-key">Reset link has expired</div>
        <button class="reset-password-button">Reset Password</button>

      </div>
    </div>
  </div><!-- /.shell -->
</section><!-- /.section-generic -->

<script>

  $(document).ready(function() {
    var hasUpper = false
    var hasLower = false
    var hasNumber = false
    var hasEight = false
    var isEmpty = false
    
    function getUrlParameter(sParam) {	
      var sPageURL = decodeURIComponent(window.location.search.substring(1)),	
        sURLVariables = sPageURL.split('&'),	
        sParameterName,	
        i;	
      for (i = 0; i < sURLVariables.length; i++) {	
        sParameterName = sURLVariables[i].split('=');	
        if (sParameterName[0] === sParam) {	
            return sParameterName[1] === undefined ? true : sParameterName[1];	
        }	
      }	
    };	
    
    var email = getUrlParameter("email") 
    var key = getUrlParameter("key")
    
    if(key == null){
      $("#no-key").removeAttr("hidden")
    }
    
    if(email != null){
      $(".reset-password-title").html("Enter a new password for " + email + " below:")
    }
    
    function toggleRequirement(requirement, iconRequirement, shouldShow){
      if(shouldShow){
        $(requirement).css("color", "green")
        $(iconRequirement).removeClass("fa-times-circle")
        $(iconRequirement).addClass("fa-check-circle")
        $(iconRequirement).css("color", "green")
      }
      else{
        $(requirement).css("color", "red")
        $(iconRequirement).removeClass("fa-check-circle")
        $(iconRequirement).addClass("fa-times-circle")
        $(iconRequirement).css("color", "red")
      }
    }
    
    function resetInfo(){
      $("#pw-weak").attr("hidden", "")
      $("#pw-empty").attr("hidden", "")
      $("#pws-no-match").attr("hidden", "")
    }
    
    function resetPassword(pw){
      $(".reset-password-button").css("background-color", "grey")
      $(".reset-password-button").css("border-color", "grey")
      $(".reset-password-button").html("RESETTING...")
      $.ajax({
        method:'POST',
        url: "https://auth.vejo.com:8443/api/updateUserPassword",
        data: {
          "resetKey": encodeURIComponent(key),
          "email": email,
          "regionId": 1,
          "newPassword": pw
        },
        success: function(result){
          console.log("result", result)
          if(result["error"] == 0){
            $(".reset-password-button").css("background-color", "green")
            $(".reset-password-button").css("border-color", "green")
            $(".reset-password-button").html("Success!")
            setTimeout(function(){
              window.location.href = "https://www.vejo.com?from=reset"
            }, 3000);
          }
          else{
            $("#no-key").removeAttr("hidden")
            $(".reset-password-button").css("background-color", "black")
            $(".reset-password-button").css("border-color", "black")
            $(".reset-password-button").html("Reset Password")
          }
        },
      });
    }
    
    $(".reset-password-button").on("click", function(){
      var pwVal = $("#pw").val()
      var repeatPwVal = $("#repeat-pw").val()
      
      resetInfo()
      
      if(pwVal == repeatPwVal){ 
        if(hasUpper && hasLower && hasNumber && hasEight && key != null){
          resetPassword(pwVal)
        }
        else{
          if(isEmpty){
            $("#pw-empty").removeAttr("hidden")
          }
          else{
            $("#pw-weak").removeAttr("hidden")
          }
        }
      }
      else{
        $("#pws-no-match").removeAttr("hidden")
      }
    })
    
    $("#pw").bind("input", function(){
      resetInfo()
      var val = $("#pw").val()
      hasUpper = false
      hasLower = false
      hasNumber = false
      hasEight = false

      if(val.length > 7){
        hasEight = true
      }
      
      if(val.length > 0){
        $(".reset-password-pw-requirements").removeAttr("hidden")
        isEmpty = false
      }
      else{
        $(".reset-password-pw-requirements").attr("hidden", "")
        isEmpty = true
      }

      for(var i = 0; i < val.length; i++){
        if(val[i] == val[i].toLowerCase()){
          if(isNaN(val[i])){
            hasLower = true
          }
        }
        if(val[i] == val[i].toUpperCase()){
          if(isNaN(val[i])){
            hasUpper = true
          }
        }

        if(!isNaN(val[i])){
          hasNumber = true
        }
      }
      
      toggleRequirement("#req1", "#icon-req1", hasUpper)
      toggleRequirement("#req2", "#icon-req2", hasLower)
      toggleRequirement("#req3", "#icon-req3", hasNumber)
      toggleRequirement("#req4", "#icon-req4", hasEight)
    })
  })
</script>
